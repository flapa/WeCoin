@model Presentation.ViewModels.ApplicationUserViewModel
<body>
    @{
        ViewBag.Title = "WealthShare - Registro";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    @Styles.Render("~/Content/Register.css");

    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" id="closeX">&times;</button>
                    <h4 class="modal-title">Termos de uso</h4>
                </div>
                <div class="modal-body">
                    <input type="checkbox" name="termosdeuso" id="checkboxModal" required /> É preciso aceitar os @Html.ActionLink("Termos de uso", "UserTerms") para continuar.
                    @*<p>This is a small modal.</p>*@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-dismiss="modal" id="accept">Aceitar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal" id="close">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="container well">
        <legend><i class="glyphicon glyphicon-globe"></i> Registrar</legend>
        @using (Html.BeginForm("Register", "Register", FormMethod.Post, new { id = "postForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        <i>mínimo de 6 caracteres</i>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <input id="registerBtn" class="btn btn-sm btn-success" type="submit" value="Registrar" />
                        <button type="reset" class="btn btn-default btn-sm">
                            Limpar campos
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</body>

@section Scripts
{
    <script type="text/javascript">
        $("#myAccountBtn").hide();
        $("#logoutBtn").hide();
        $("#notificationBtn").hide();
        $("#registerBtn").click(function () {
            $(this).attr("disabled", "disabled");
            $("#postForm").submit();
        });

        $(window).on('load',function(){
            $('#myModal').modal('show');
             
        });

        $('#accept').click(function()
        {
            if ($('#checkboxModal').is(":checked")) {
                $('#myModal').modal('hide');
            }else {
                $('#myModal').modal('show');
            }
        });

        $("#accept").on("click", function () {
            if (($("input[name*='termosdeuso']:checked").length) <= 0) {
                alert("Você precisa aceitar os termos de uso. Recomendamos que leia antes de aceitar.");
            }
            return false;
        });

        $("#close").on("click",function(){
            if (($("input[name*='termosdeuso']:checked").length)<=0) {
                alert("Você precisa aceitar os termos de uso. Recomendamos que leia antes de aceitar.");
            }
            return false;
        });

        $("#closeX").on("click",function(){
            if (($("input[name*='termosdeuso']:checked").length)<=0) {
                alert("Você precisa aceitar os termos de uso, recomendo que leia antes de aceitar");
            }
            return false;
        });
    </script>
}